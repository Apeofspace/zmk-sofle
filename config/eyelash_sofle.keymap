#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt {
    flavor = "hold-preferred";
};

/* / { */
/*     behaviors: { */
/*      mclt: mycoollayertap { */
/*       compatible = "zmk,behavior-hold-tap"; */
/*       label = "MY_COOL_LAYER_TAP"; */
/*       #binding-cells = <2>; */
/*       flavor = "hold-preferred"; */
/*       tapping-term-ms = <150>; */
/*       /* quick-tap-ms = <125>; */ */
/*       /* global-quick-tap; */ */
/*       bindings = <&mo>, <&kp>; */
/*     }; */
/*   }; */
/* } */

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

keymap {
    compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC        &kp N1          &kp N2                &kp N3              &kp N4           &kp N5        &kp UP_ARROW     &kp N6     &kp N7            &kp N8    &kp N9        &kp N0      &kp BACKSPACE
&kp GRAVE      &kp Q           &kp W                 &kp E               &kp R            &kp T         &kp DOWN_ARROW   &kp Y      &kp U             &kp I     &kp O         &kp P       &kp LBKT
&kp TAB        &kp A           &kp S                 &kp D               &kp F            &kp G         &kp LEFT_ARROW   &kp H      &kp J             &kp K     &kp L         &kp SEMI    &kp APOS
&kp LEFT_ALT   &kp Z           &kp X                 &kp C               &kp V            &kp B         &kp RIGHT_ARROW  &kp N      &kp M             &kp COMMA &kp DOT       &kp FSLH    &kp BSLH
&kp C_MUTE     &kp LEFT_GUI    &kp LEFT_ALT          &kp LCTRL           &mo LEFT_SHIFT   &kp SPACE     &kp ENTER        &kp ENTER  &mclt 1 TAB       &kp TAB   &kp RIGHT_ALT &kp LEFT_GUI
                      >;

   sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
   display-name = "base";
   };

/*         layer_1 { */
/*             bindings = < */
/* &trans         &kp F1          &kp F2                &kp F3              &kp F4           &kp F5        &mmv MOVE_UP     &kp F6     &kp F7      &kp F8    &kp F9        &kp F10     &kp DEL */
/* &kp F11        &kp HOME        &kp UP_ARROW          &kp END             &kp MINUS        &kp LBRC      &mmv MOVE_DOWN   &kp RBRC   &kp PLUS    &trans    &kp K_CALC    &kp PSCRN   &kp RBRC */
/* &kp F12        &kp LEFT_ARROW  &kp DOWN_ARROW        &kp RIGHT_ARROW     &kp UNDER        &kp LPAR      &mmv MOVE_LEFT   &kp RPAR   &kp EQUAL   &kp DQT   &trans        &kp COLON   &trans */
/* &trans         &kp PG_UP       &rgb_ug RGB_TOG       &kp PG_DN           &kp INSERT       &kp LBRK      &mmv MOVE_RIGHT  &kp RBRK   &trans      &trans    &trans        &trans      &trans */
/* &kp C_MUTE     &trans          &trans                &trans              &trans           &trans        &mkp LCLK        &trans     &trans      &trans    &trans        &trans */
/*                       >; */

/*     display-name = "lower"; */
/*     sensor-bindings = <&scroll_encoder>; */
/*     }; */


/*         layer_2 { */
/*             bindings = < */
/* &trans         &trans          &trans                &trans              &trans           &trans        &trans     &trans     &trans      &trans    &trans        &trans     &trans */
/* &trans         &trans          &trans                &trans              &trans           &trans        &trans     &trans     &trans      &trans    &trans        &trans     &trans */
/* &trans         &trans          &trans                &trans              &trans           &trans        &trans     &trans     &trans      &trans    &trans        &trans     &trans */
/* &trans         &trans          &trans                &trans              &trans           &trans        &trans     &trans     &trans      &trans    &trans        &trans     &trans */
/* &kp C_MUTE     &trans          &trans                &trans              &trans           &trans        &mkp LCLK        &trans     &trans      &trans    &trans        &trans */
/*                       >; */

/*     display-name = "higher"; */
/*     sensor-bindings = <&scroll_encoder>; */
/*     }; */

    };
};
